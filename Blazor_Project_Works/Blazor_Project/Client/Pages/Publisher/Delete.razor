@page "/Publishers/Delete/{id:int}"
@inject HttpClient http
@inject IToastService toastService
@inject NavigationManager nav
<div class="row">
    <div class="col-12">
        @if (publisher is null)
        {
            <div>Loading...</div>
        }
        else
        {
            <EditForm Model="@publisher" OnValidSubmit="DeletePublisher">
                <h3>Are you sure to delete</h3>
                <DataAnnotationsValidator />
                <div class="form-group row mb-1">
                    <label class="col-form-label col-2 text-end" for="@publisher.PublisherName">Publisher Name</label>
                    <div class="col-4">
                        @publisher.PublisherName

                    </div>
                </div>
                <div class="form-group row mb-1">

                    <div class="col-4 offset-2">
                        <button type="submit" class="btn btn-danger">Delete</button>

                    </div>
                </div>
            </EditForm>
        }
    </div>
    <div class="col-12">
        <a href="/Customers/List" class="btn btn-link">Back to list</a>
    </div>
</div>

@code {
    [Parameter]
    public int id { get; set; }
    private Publisher? publisher = default!;
    protected override async Task OnInitializedAsync()
    {
        publisher = await http.GetFromJsonAsync<Publisher>($"api/Publishers/{id}");
    }
    private async Task DeletePublisher()
    {
        var respose = await http.DeleteAsync($"api/Publishers/{id}");
        if (respose.IsSuccessStatusCode)
        {
            toastService.ShowSuccess("Data deleted successsfully", "Success");
            nav.NavigateTo("/Publishers/List");
        }
    }
}
